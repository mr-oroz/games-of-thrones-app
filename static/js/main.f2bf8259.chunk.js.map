{"version":3,"sources":["components/header/header.js","services/getServices.js","components/spinner/spiner.js","components/errorMessage/errorMessage.js","components/randomChar/random-char.js","components/itemList/item-list.js","components/RowBlock/RowBlock.js","components/itemsDetails/items-details.js","components/pages/characterPage.js","components/pages/BooksPage.js","components/pages/HousesPage.js","components/pages/booksItem.js","App.js","index.js"],"names":["Header","Navbar","bg","variant","Container","Brand","style","textDecoration","color","to","Nav","className","Link","href","Component","GotService","getResource","url","a","fetch","_ApiBase","res","ok","Error","status","json","getAllCharacters","map","_transformCharacter","getCharacter","id","character","getAllHouses","_transfromHouses","getHouse","houses","getAllBooks","_transformBooks","getBook","books","_extractId","item","match","char","name","isSet","gender","born","died","culture","house","region","words","titles","overlord","ancestralWeapons","book","numberOfPages","publisher","released","this","data","Spiner","ErrorMessage","src","alt","RandomChar","state","loading","error","onCharLoaded","setState","onError","updateChar","Math","floor","random","then","catch","timderId","setInterval","props","interval","clearInterval","spinner","errorMessage","content","View","margin","ItemList","getData","renderItem","onItemSelected","useState","itemList","updateList","useEffect","items","i","label","onClick","cursor","maxWidth","RowBlock","left","right","Row","Col","md","Field","field","ItemsDetails","prevProps","prevState","snapshot","ItemId","React","Children","children","child","cloneElement","CharacterPage","gotService","selectedChar","errorInfo","console","log","ItemDetails","BooksPage","itemId","history","push","withRouter","HousesPage","selectedCHouses","BooksItem","bookId","App","getServices","toggleRandomCharackter","toggle","toggleButton","path","lg","size","offset","component","exact","render","params","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2bf8259.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand>\r\n                        <Link style={{textDecoration: 'none', color: 'white'}} to='/'>Games of Thrones</Link>\r\n                    </Navbar.Brand>\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link>\r\n                            <Link style={{textDecoration: 'none', color: 'white'}}\r\n                                  to={'/charackters'}>Charackters</Link>\r\n                        </Nav.Link>\r\n                        <Nav.Link href=\"#features\">\r\n                            <Link style={{textDecoration: 'none', color: 'white'}} to={'/books'}>Books</Link>\r\n                        </Nav.Link>\r\n                        <Nav.Link href=\"#pricing\">\r\n                            <Link style={{textDecoration: 'none', color: 'white'}} to={'/houses'}>Houses</Link>\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","export default class GotService {\r\n    constructor() {\r\n        this._ApiBase = 'https://www.anapioficeandfire.com/api'\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._ApiBase}${url}`);\r\n        if (!res.ok) {\r\n            throw new Error(`Cloud not fethc ${url}` + `, received ${res.status}`);\r\n        }\r\n        return await res.json()\r\n    }\r\n\r\n    getAllCharacters = async () => {\r\n        const res = await this.getResource(`/characters?page=5&pageSize=10`);\r\n        return res.map(this._transformCharacter)\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const character = await this.getResource(`/characters/${id}`)\r\n        return this._transformCharacter(character)\r\n    }\r\n\r\n    getAllHouses = async () => {\r\n        const res = await this.getResource(`/houses/`)\r\n        return res.map(this._transfromHouses)\r\n    }\r\n\r\n    getHouse = async (id) => {\r\n        const houses = await this.getResource(`/houses/${id}`)\r\n        return this._transfromHouses(houses)\r\n    }\r\n\r\n    getAllBooks = async () => {\r\n        const res = await this.getResource(`/books/`)\r\n        return res.map(this._transformBooks)\r\n    }\r\n\r\n    getBook = async (id) => {\r\n        const books = await this.getResource(`/books/${id}`)\r\n        return this._transformBooks(books)\r\n    }\r\n\r\n    isSet(data) {\r\n        if(data) {\r\n            return data\r\n        } else {\r\n            return 'no data :('\r\n        }\r\n    }\r\n\r\n    _extractId = (item) => {\r\n        const idRebExp = /\\/([0-9]*)$/;\r\n        return item.url.match(idRebExp)[1]\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: this._extractId(char),\r\n            name: this.isSet(char.name),\r\n            gender: this.isSet(char.gender),\r\n            born: this.isSet(char.born),\r\n            died: this.isSet(char.died),\r\n            culture: this.isSet(char.culture)\r\n        }\r\n    }\r\n\r\n    _transfromHouses = (house) => {\r\n        return {\r\n            id: this._extractId(house),\r\n            name: this.isSet(house.name),\r\n            region: this.isSet(house.region),\r\n            words: this.isSet(house.words),\r\n            titles: this.isSet(house.titles),\r\n            overlord: this.isSet(house.overlord),\r\n            ancestralWeapons: this.isSet(house.ancestralWeapons)\r\n        }\r\n    }\r\n\r\n    _transformBooks = (book) => {\r\n        return {\r\n            id: this._extractId(book),\r\n            name: this.isSet(book.name),\r\n            numberOfPages: this.isSet(book.numberOfPages),\r\n            publisher: this.isSet(book.publisher),\r\n            released: this.isSet(book.released)\r\n        }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './spiner.css';\r\n\r\nclass Spiner extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loadingio-spinner-spin-ja3ye79gwbg\">\r\n                <div className=\"ldio-gbzfrfslvim\">\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Spiner;","import React, {Component} from 'react';\r\n\r\nclass ErrorMessage extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <img src=\"https://exploringtm1.com/wp-content/uploads/2021/07/TM1-TI-Error-Codes.jpg\" alt=\"\"/>\r\n                <span style={{color: 'white'}}>Something goes wrong</span>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorMessage;","import React, {Component} from 'react';\r\nimport './random-char.css';\r\nimport GotService from '../../services/getServices';\r\nimport Spinner from '../spinner/spiner';\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass RandomChar extends Component {\r\n\r\n    GotService = new GotService()\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n    componentDidMount() {\r\n        this.updateChar()\r\n        this.timderId = setInterval(this.updateChar, this.props.interval)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timderId)\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char,\r\n            loading: false\r\n        })\r\n    }\r\n    onError = () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * 140 + 25)\r\n        this.GotService.getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    render() {\r\n        const {char, loading, error} = this.state;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n\r\n        const content = !(loading || error) ? <View char={char}/> : null\r\n        return (\r\n            <div className='random-block rounded shadow'>\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, gender, born, died, culture} = char;\r\n    return (\r\n        <>\r\n            <ul className='list-group list-group-flush'>\r\n                <h4 style={{margin: '0'}} className='list-group-item'>Random\r\n                    Character: {name}</h4>\r\n                <li className='list-group-item d-flex justify-content-between'>\r\n                    <span className='term'>Gender</span>\r\n                    <span>{gender}</span>\r\n                </li>\r\n                <li className='list-group-item d-flex justify-content-between'>\r\n                    <span className='term'>Born</span>\r\n                    <span>{born}</span>\r\n                </li>\r\n                <li className='list-group-item d-flex justify-content-between'>\r\n                    <span className='term'>Died</span>\r\n                    <span>{died}</span>\r\n                </li>\r\n                <li className='list-group-item d-flex justify-content-between'>\r\n                    <span className='term'>Culture</span>\r\n                    <span>{culture}</span>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import React, {useState, useEffect} from 'react';\r\nimport Spinner from '../spinner/spiner';\r\n\r\nconst ItemList = ({getData, renderItem, onItemSelected}) => {\r\n    const [itemList, updateList] = useState([])\r\n    useEffect(() => {\r\n        getData()\r\n            .then((data) => {\r\n                updateList(data)\r\n            })\r\n    }, [])\r\n\r\n    const renderItems = (arr) => {\r\n        return arr.map((item, i) => {\r\n            const {id} = item;\r\n            const label = renderItem(item)\r\n            return (\r\n                <li\r\n                    onClick={() => onItemSelected(id)}\r\n                    key={id}\r\n                    style={{cursor: 'pointer'}}\r\n                    className='list-group-item'>\r\n                    {label}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    if (!itemList) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    const items = renderItems(itemList)\r\n    return (\r\n        <ul style={{maxWidth: '500px'}} className='item list list list-group mt-4'>\r\n            {items}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ItemList;","import React from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\nconst RowBlock = ({left, right}) => {\r\n    return (\r\n        <Row>\r\n            <Col md={'6'}>\r\n                {left}\r\n            </Col>\r\n            <Col md={'6'}>\r\n                {right}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default RowBlock;","import React, {Component} from 'react';\r\n\r\nconst Field = ({item, field, label}) => {\r\n    return (\r\n        <li className='list-group-item d-flex justify-content-between'>\r\n            <span className='term'>{label}</span>\r\n            <span>{item[field]}</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport {Field}\r\n\r\nclass ItemsDetails extends Component {\r\n    state = {\r\n        item: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.ItemId !== prevProps.ItemId) {\r\n            this.updateChar()\r\n        }\r\n    }\r\n\r\n    updateChar() {\r\n        const {ItemId, getData} = this.props;\r\n        if (!ItemId) {\r\n            return;\r\n        }\r\n\r\n        getData(ItemId)\r\n            .then((item) => {\r\n                this.setState({item})\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.item) {\r\n            return <span style={{color: 'white'}} className='select-error'>Please select a character</span>\r\n        }\r\n        const {item} = this.state\r\n        const {name} = item\r\n        return (\r\n            <ul className='list-group list-group-flush mt-4'>\r\n                <h4 style={{margin: '0'}} className='list-group-item'> {name}</h4>\r\n                {\r\n                    React.Children.map(this.props.children, (child) => {\r\n                        return React.cloneElement(child, {item})\r\n                    })\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemsDetails;","import React, {Component} from 'react';\r\nimport ItemList from \"../itemList/item-list\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport gotService from '../../services/getServices'\r\nimport RowBlock from \"../RowBlock/RowBlock\";\r\nimport ItemsDetails, {Field} from \"../itemsDetails/items-details\";\r\n\r\n\r\n\r\nclass CharacterPage extends Component {\r\n    gotService = new gotService()\r\n    state = {\r\n        selectedChar: null,\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log('error')\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {selectedChar, error} = this.state;\r\n\r\n        if (error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        const itemList = (\r\n            <ItemList\r\n                onItemSelected={this.onItemSelected}\r\n                getData={this.gotService.getAllCharacters}\r\n                renderItem={({name, gender}) => `${name} (${gender})`}\r\n            />\r\n        );\r\n        const ItemDetails = (\r\n            <ItemsDetails getData={this.gotService.getCharacter} ItemId={selectedChar}>\r\n                <Field field='gender' label='Gender'/>\r\n                <Field field='born' label='Born'/>\r\n                <Field field='died' label='Died'/>\r\n                <Field field='culture' label='Culture'/>\r\n            </ItemsDetails>\r\n        )\r\n        return (\r\n            <RowBlock left={itemList} right={ItemDetails}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CharacterPage;","import React, {Component} from 'react';\r\nimport ItemList from \"../itemList/item-list\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport gotService from '../../services/getServices'\r\nimport {withRouter} from 'react-router-dom'\r\nclass BooksPage extends Component {\r\n\r\n    gotService = new gotService()\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log('error')\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {error} = this.state;\r\n\r\n        if (error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        return (\r\n            <ItemList\r\n                onItemSelected={(itemId) => {\r\n                    this.props.history.push(`/books/${itemId}`)\r\n                }}\r\n                getData={this.gotService.getAllBooks}\r\n                renderItem={({name, publisher}) => `${name} (${publisher})`}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(BooksPage);","import React, {Component} from 'react';\r\nimport ItemList from \"../itemList/item-list\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport RowBlock from \"../RowBlock/RowBlock\";\r\nimport gotService from '../../services/getServices'\r\nimport ItemsDetails, {Field} from \"../itemsDetails/items-details\";\r\nclass HousesPage extends Component {\r\n\r\n    gotService = new gotService()\r\n    state = {\r\n        selectedCHouses: null,\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log('error')\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedCHouses: id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {selectedCHouses, error} = this.state;\r\n\r\n        if (error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        const itemList = (\r\n            <ItemList\r\n                onItemSelected={this.onItemSelected}\r\n                getData={this.gotService.getAllHouses}\r\n                renderItem={({name, region}) => `${name} (${region})`}\r\n            />\r\n        );\r\n        const ItemDetails = (\r\n            <ItemsDetails getData={this.gotService.getHouse} ItemId={selectedCHouses}>\r\n                <Field field='words' label='Words'/>\r\n                <Field field='titles' label='Titles'/>\r\n                <Field field='overlord' label='Overlord'/>\r\n            </ItemsDetails>\r\n        )\r\n        return (\r\n            <RowBlock left={itemList} right={ItemDetails}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HousesPage;","import React, {Component} from 'react';\r\nimport gotService from '../../services/getServices'\r\nimport ItemsDetails, {Field} from \"../itemsDetails/items-details\";\r\n\r\nclass BooksItem extends Component {\r\n    gotService = new gotService()\r\n\r\n    render() {\r\n        const {bookId} = this.props;\r\n        return (\r\n            <ItemsDetails\r\n                getData={this.gotService.getBook}\r\n                ItemId={bookId}>\r\n                <Field field='publisher' label='Publisher'/>\r\n                <Field field='numberOfPages' label='NumberOfPages'/>\r\n                <Field field='released' label='Released'/>\r\n            </ItemsDetails>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BooksItem;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/header/header\";\r\nimport RandomChar from \"./components/randomChar/random-char\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport ErrorMessage from \"./components/errorMessage/errorMessage\";\r\nimport CharacterPage from \"./components/pages/characterPage\";\r\nimport getServices from './services/getServices';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom'\r\nimport BooksPage from \"./components/pages/BooksPage\";\r\nimport HousesPage from \"./components/pages/HousesPage\";\r\nimport BooksItem from \"./components/pages/booksItem\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            toggle: true,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    getServices = new getServices()\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log('error')\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    toggleRandomCharackter = () => {\r\n        this.setState(({toggle}) => {\r\n            return {\r\n                toggle: !toggle\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {toggle, error} = this.state;\r\n        const char = toggle ? <RandomChar interval={15000}/> : null;\r\n        if (error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        const toggleButton = <button\r\n            className={'btn btn-primary mt-4'}\r\n            onClick={this.toggleRandomCharackter}>\r\n            Toggle random charackter\r\n        </button>;\r\n\r\n        return (\r\n            <>\r\n                <Router>\r\n                    <Header/>\r\n                    <Container>\r\n                        <Route path='/'>\r\n                            <Row>\r\n                                <Col lg={{size: 5, offset: 0}}>\r\n                                    {char}\r\n                                    {toggleButton}\r\n                                </Col>\r\n                            </Row>\r\n                        </Route>\r\n                        <Route path='/charackters' component={CharacterPage}/>\r\n                        <Route path='/books' exact component={BooksPage}/>\r\n                        <Route path='/houses' component={HousesPage}/>\r\n                        <Route path='/books/:id' render={\r\n                            ({match}) => {\r\n                                const {id} = match.params\r\n                                return <BooksItem bookId={id}/>\r\n                            }\r\n                        }/>\r\n                    </Container>\r\n                </Router>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}